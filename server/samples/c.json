{
    "1":"static inline int __task_prio(struct task_struct *p)\n{\n\tif (p->sched_class == &stop_sched_class) \n\t\treturn -2;\n\n\tif (rt_prio(p->prio)) \n\t\treturn p->prio; /* [-1, 99] */\n\n\tif (p->sched_class == &idle_sched_class)\n\t\treturn MAX_RT_PRIO + NICE_WIDTH;\n\n\treturn MAX_RT_PRIO + MAX_NICE; \n}",
    "2":"static inline bool __sched_core_less(struct task_struct *a)\n{\n\tif (a->core_cookie < b->core_cookie)\n\t\treturn true;\n\n\tif (a->core_cookie > b->core_cookie)\n\t\treturn false;\n\n\tif (prio_less(b, a, !!task_rq(a)->core->core_forceidle_count))\n\t\treturn true;\n\n\treturn false;\n}",
    "3":"static inline int rb_sched_core_cmp(const void *key)\n{\n\tconst struct task_struct *p = __node_2_sc(node);\n\tunsigned long cookie = (unsigned long)key;\n\n\tif (cookie < p->core_cookie)\n\t\treturn -1;\n\n\tif (cookie > p->core_cookie)\n\t\treturn 1;\n\n\treturn 0;\n}"
}